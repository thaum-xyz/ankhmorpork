apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup
  namespace: backup-k3s
spec:
  schedule: "5 0 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
          - name: alias
            image: minio/mc
            args:
            - --no-color
            - alias
            - set
            - OBJSTORE
            - $(S3_ADDRESS)
            - $(S3_ACCESS_KEY)
            - $(S3_SECRET_KEY)
            env:
            - name: S3_ADDRESS
              value: "http://main-minio.minio-main.svc:9000"
            envFrom:
            - secretRef:
                name: s3-credentials
            volumeMounts:
            - mountPath: /root/
              name: config
          - name: packer
            image: busybox
            command:
              - "/bin/sh"
              - "-c"
              - |
                  export NAME=$(date +%F_%H-%M)_snapshot
                  mkdir -p "/data/${NAME}" "/data/send";
                  cp "/var/lib/rancher/k3s/server/token" "/data/${NAME}/";
                  cp -r "/var/lib/rancher/k3s/server/db" "/data/${NAME}/";
                  tar -czvf "/data/send/${NAME}.tar.gz" -C /data/ "${NAME}";
            volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /var/lib/rancher/k3s/server
              name: k3s-server
              readOnly: true
          containers:
          - name: send
            image: minio/mc
            imagePullPolicy: IfNotPresent
            args:
            - --no-color
            - --debug
            - cp
            - --recursive
            - /data/send/
            - OBJSTORE/$(S3_BUCKET)/$(S3_PREFIX)
            env:
            - name: S3_BUCKET
              value: k3s-db
            - name: S3_PREFIX
              value: ankhmorpork
            volumeMounts:
            - mountPath: /root/
              name: config
            - mountPath: /data
              name: data
          restartPolicy: OnFailure
          nodeSelector:
            node-role.kubernetes.io/control-plane: "true"
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
          volumes:
          - name: config
            emptyDir: {}
          - name: data
            emptyDir: {}
          - name: k3s-server
            hostPath:
              path: /var/lib/rancher/k3s/server
              type: Directory
