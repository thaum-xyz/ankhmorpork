---
- hosts: all
  become: true
  #collections:
  #- devsec.hardening
  roles:
  - { role: oefenweb.locales, when: (ansible_os_family == "Debian") }
  - { role: hifis.unattended_upgrades, when: (ansible_os_family == "Debian") }
  - devsec.hardening.ssh_hardening
  - prometheus.prometheus.systemd_exporter

- hosts: all
  become: true
  serial: 1
  roles:
  - paulfantom.system
  handlers:
  - name: restart systemd-logind
    systemd:
      name: systemd-logind
      state: restarted
  tasks:
  - name: Ensure snapd is removed
    apt:
      name: snapd
      state: absent
      purge: true
    when: ansible_os_family == "Debian"
  - name: Disable handling of lid switch by systemd-logind
    lineinfile:
      path: /etc/systemd/logind.conf
      regexp: '^#?HandleLidSwitch='
      line: 'HandleLidSwitch=ignore'
      state: present
      backup: yes
    notify: restart systemd-logind

- name: Kubernetes host-level requirements
  hosts: all
  become: true
  tasks:
  - name: Install nfs mount client software
    package:
      name: "{{ item }}"
      state: present
    with_items:
    - "{{ 'nfs-common' if (ansible_os_family | lower == 'debian') else 'nfs-utils' }}"
  - name: Install ubuntu addons when necessary
    package:
      name: ubuntu-restricted-addons
      state: present
    when: '"GenuineIntel" in ansible_processor'
  - name: Increase max_user_instances to prevent running out of inotify watches
    sysctl:
      name: fs.inotify.max_user_instances
      value: 512
      state: present
      reload: yes

# Multipathd needs to be configured to prevent colisions with longhorn
# More in https://longhorn.io/kb/troubleshooting-volume-with-multipath/
- name: Configure multipathd
  hosts: all
  become: true
  handlers:
  - name: restart multipathd
    systemd:
      name: multipathd
      state: restarted
  tasks:
  - name: Configure multipathd
    copy:
      content: |
        defaults {
            user_friendly_names yes
        }
        blacklist {
            devnode "^sd[a-z0-9]+"
        }
      dest: /etc/multipath.conf
      owner: root
      group: root
      mode: 0644
    notify: restart multipathd

- name: Install metrics collectors
  hosts: all
  become: true
  tasks:
  - name: Install dependencies
    package:
      name:
      - moreutils
      - cron
      state: present
  - name: Download textfile collector scripts
    get_url:
      url: "{{ item.url }}"
      dest: "{{ item.exec }}"
      mode: 0755
    loop: "{{ node_exporter_scripts }}"
  - name: Set cronjob for textfile scripts
    cron:
      cron_file: "/etc/cron.d/metrics"
      user: root
      name: "{{ item.name }}"
      minute: "*/5"
      job: "{{ item.exec }} {{ item.params | default('') }} | sponge /var/lib/node_exporter/{{ item.name }}.prom"
    loop: "{{ node_exporter_scripts }}"
