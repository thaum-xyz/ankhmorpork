---
- hosts: all
  become: true
  any_errors_fatal: true
  #collections:
  #- devsec.hardening
  roles:
  - { role: oefenweb.locales, when: (ansible_os_family == "Debian") }
  - { role: jnv.unattended-upgrades, when: (ansible_os_family == "Debian") }
  - devsec.hardening.ssh_hardening
  - prometheus.prometheus.systemd_exporter

- hosts: all
  become: true
  serial: 1
  roles:
  - paulfantom.system
  handlers:
  - name: restart systemd-logind
    systemd:
      name: systemd-logind
      state: restarted
  tasks:
  - name: Ensure snapd is removed
    apt:
      name: snapd
      state: absent
      purge: true
    when: ansible_os_family == "Debian"
  - name: Disable handling of lid switch by systemd-logind
    lineinfile:
      path: /etc/systemd/logind.conf
      regexp: '^#?HandleLidSwitch='
      line: 'HandleLidSwitch=ignore'
      state: present
      backup: yes
    notify: restart systemd-logind

# TODO: fix handling /var/log in the role
#- hosts: raspberry
#  become: true
#  any_errors_fatal: true
#  roles:
#  - paulfantom.raspberry

- name: Kubernetes host-level requirements
  hosts: all
  become: true
  tasks:
  - name: Install nfs mount client software
    package:
      name: "{{ item }}"
      state: present
    with_items:
    - "{{ 'nfs-common' if (ansible_os_family | lower == 'debian') else 'nfs-utils' }}"
  - name: Install VXLAN dependencies
    package:
      name: linux-modules-extra-raspi
      state: present
    when:
    - ansible_machine == "aarch64"
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_version is version('21.10', '>=')
  - name: Install ubuntu addons when necessary
    package:
      name: ubuntu-restricted-addons
      state: present
    when: '"GenuineIntel" in ansible_processor'

- name: Install metrics collectors
  hosts: all
  become: true
  tasks:
  - name: Install dependencies
    package:
      name:
      - moreutils
      - cron
      state: present
  - name: Download apt_info textfile collector script
    get_url:
      url: "https://raw.githubusercontent.com/prometheus-community/node-exporter-textfile-collector-scripts/master/apt_info.py"
      dest: "/usr/local/bin/apt_info.py"
      mode: 0755
  - name: Set cronjob for package manager
    cron:
      cron_file: "/etc/cron.d/metrics"
      user: root
      name: "apt"
      minute: "13"
      job: "/usr/local/bin/apt_info.py | sponge /var/lib/node_exporter/apt.prom"
  - when: enable_smartmon
    block:
    - name: Download smartmon textfile collector script
      get_url:
        url: "https://github.com/prometheus-community/node-exporter-textfile-collector-scripts/blob/master/smartmon.sh"
        dest: "/usr/local/bin/smartmon.sh"
        mode: 0755
    - name: Set SMART metrics collection cronjob
      cron:
        cron_file: "/etc/cron.d/metrics"
        user: root
        name: "smartmon"
        minute: "*/10"
        job: "/usr/local/bin/smartmon.sh | sponge /var/lib/node_exporter/smartmon.prom"
