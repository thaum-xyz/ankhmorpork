apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: recipes
  namespace: tandoor
  labels:
    app: recipes
spec:
  replicas: 1
  serviceName: recipes
  selector:
    matchLabels:
      app: recipes
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: recipes
    spec:
      restartPolicy: Always
      initContainers:
      - name: initialize
        envFrom:
        - secretRef:
            name: django
        - configMapRef:
            name: config-envs
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: pg-app-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-app-secret
              key: password
        image: vabene1111/recipes:1.4.9
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 20m
            memory: 120Mi
        command:
        - sh
        - -c
        - |
          set -e
          source venv/bin/activate
          echo "Updating database"
          python manage.py migrate
          python manage.py collectstatic_js_reverse
          python manage.py collectstatic --noinput
          echo "Setting media file attributes"
          chown -R 65534:65534 /opt/recipes/mediafiles
          find /opt/recipes/mediafiles -type d | xargs -r chmod 755
          find /opt/recipes/mediafiles -type f | xargs -r chmod 644
          echo "Done"
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /opt/recipes/mediafiles
          name: media
          # mount as subPath due to lost+found on ext4 pvc
          subPath: files
        - mountPath: /opt/recipes/staticfiles
          name: static
          # mount as subPath due to lost+found on ext4 pvc
          subPath: files
      containers:
      - name: recipes
        image: vabene1111/recipes:1.4.9
        imagePullPolicy: IfNotPresent
        envFrom:
        - secretRef:
            name: django
        - configMapRef:
            name: config-envs
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: pg-app-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-app-secret
              key: password
        command:
          - /opt/recipes/venv/bin/gunicorn
          - -b
          - :8080
          - --access-logfile
          - "-"
          - --error-logfile
          - "-"
          - --log-level
          - INFO
          - recipes.wsgi
        readinessProbe:
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          periodSeconds: 30
        ports:
        - containerPort: 8080
          name: gunicorn
        resources:
          requests:
            cpu: 20m
            memory: 112Mi
        volumeMounts:
          - mountPath: /opt/recipes/mediafiles
            name: media
            # mount as subPath due to lost+found on ext4 pvc
            subPath: files
          - mountPath: /opt/recipes/staticfiles
            name: static
            # mount as subPath due to lost+found on ext4 pvc
            subPath: files
        securityContext:
          runAsUser: 65534
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media
        - name: static
          persistentVolumeClaim:
            claimName: static
