apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: webapp
    app.kubernetes.io/name: tandoor
    app.kubernetes.io/part-of: tandoor
    app.kubernetes.io/version: 1.5.12
  name: tandoor
  namespace: tandoor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webapp
      app.kubernetes.io/name: tandoor
      app.kubernetes.io/part-of: tandoor
  serviceName: tandoor
  template:
    metadata:
      labels:
        app.kubernetes.io/component: webapp
        app.kubernetes.io/name: tandoor
        app.kubernetes.io/part-of: tandoor
    spec:
      containers:
        - command:
            - /opt/recipes/venv/bin/gunicorn
            - -b
            - :8080
            - --access-logfile
            - '-'
            - --error-logfile
            - '-'
            - --log-level
            - INFO
            - recipes.wsgi
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: postgres-user
          envFrom:
            - secretRef:
                name: tandoor-django
            - configMapRef:
                name: tandoor-config-envs
          image: vabene1111/recipes:1.5.12
          imagePullPolicy: IfNotPresent
          name: recipes
          ports:
            - containerPort: 8080
              name: gunicorn
          readinessProbe:
            httpGet:
              path: /accounts/login/?next=/search/
              port: gunicorn
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 30
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 120Mi
          securityContext:
            runAsUser: 65534
          volumeMounts:
            - mountPath: /opt/recipes/mediafiles
              name: media
              subPath: files
            - mountPath: /opt/recipes/staticfiles
              name: static
              subPath: files
#      initContainers:
#        - command:
#            - sh
#            - -c
#            - |
#              set -e
#              source venv/bin/activate
#              echo "Updating database"
#              python manage.py migrate
#              python manage.py collectstatic_js_reverse
#              python manage.py collectstatic --noinput
#              echo "Setting media file attributes"
#              chown -R 65534:65534 /opt/recipes/mediafiles
#              find /opt/recipes/mediafiles -type d | xargs -r chmod 755
#              find /opt/recipes/mediafiles -type f | xargs -r chmod 644
#              echo "Done"
#          env:
#            - name: POSTGRES_USER
#              valueFrom:
#                secretKeyRef:
#                  key: username
#                  name: postgres-user
#            - name: POSTGRES_PASSWORD
#              valueFrom:
#                secretKeyRef:
#                  key: password
#                  name: postgres-user
#          envFrom:
#            - secretRef:
#                name: tandoor-django
#            - configMapRef:
#                name: tandoor-config-envs
#          image: vabene1111/recipes:1.5.12
#          imagePullPolicy: IfNotPresent
#          name: initialize
#          resources:
#            limits:
#              cpu: 250m
#              memory: 250Mi
#            requests:
#              cpu: 50m
#              memory: 120Mi
#          securityContext:
#            runAsUser: 0
#          volumeMounts:
#            - mountPath: /opt/recipes/mediafiles
#              name: media
#              subPath: files
#            - mountPath: /opt/recipes/staticfiles
#              name: static
#              subPath: files
      restartPolicy: Always
      serviceAccountName: tandoor
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: media
        - name: static
          persistentVolumeClaim:
            claimName: static
  updateStrategy:
    type: RollingUpdate
