---
version: 'v0.31.0'  # application-version-from-github: thanos-io/thanos
image: "quay.io/thanos/thanos:v0.31.0"  # application-image-from-github: thanos-io/thanos
namespace: "datalake-metrics"
imagePullPolicy: 'IfNotPresent'
hashringConfigMapName: 'hashring-config'
volumeClaimTemplate:
  spec:
    accessModes: ['ReadWriteOnce']
    storageClassName: 'qnap-nfs'
    resources:
      requests:
        storage: '30Gi'
objectStorageConfig:
  name: 'thanos-objectstorage'
  key: 'thanos.yaml'
  credentialsRefs:
    access_key: 'THANOS_LOCAL_S3_ACCESS_KEY'
    secret_key: 'THANOS_LOCAL_S3_SECRET_KEY'
  content: |
    type: S3
    config:
      bucket: metrics
      endpoint: 192.168.2.29:8010
      access_key: {{ .access_key }}
      secret_key: {{ .secret_key }}
      http_config:
        tls_config:
          insecure_skip_verify: true
    prefix: thanos

# reference to htpasswd file storred in doppler. Content later available in Secret 'thanos-receive-ingress-auth'.
ingressAuthHTPasswdRef: THANOS_INGRESS_HTPASSWD

receiveIngestor:
  replicas: 1
  retention: 2d
  resources:
    requests:
      cpu: 150m
      memory: 1100Mi
#    limits:
#      cpu: 700m
#      memory: 2Gi
receiveRouter:
  replicas: 1
  resources:
    requests:
      cpu: 200m
      memory: 98Mi
#    limits:
#      cpu: 300m
#      memory: 200Mi
store:
  replicas: 1
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 3
      memory: 10Gi
#  bucketCache:
#    type: GROUPCACHE
#    config:
#      self_url: http://$(POD_IP):10902
#      peers:
#        - dnssrv+_http._tcp.thanos-store.datalake-metrics.svc.cluster.local:10902
#      groupcache_group: cachegroup
#      dns_interval: 1s
#      timeout: 2s
  extraEnv:
    - name: POD_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
query:
  replicas: 1
  resources:
    requests:
      cpu: 15m
      memory: 40Mi
compact:
  replicas: 0
  retentionResolutionRaw: '0'
  retentionResolution5m: '120d'
  retentionResolution1h: '365d'
