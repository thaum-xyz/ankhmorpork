---
common:
  namespace: &namespace "paperless"
  externalSecretStoreName: &externalSecretStoreName "doppler-auth-api"
paperless:
  version: "1.14.2"  # application-version-from-github: paperless-ngx/paperless-ngx
  image: "ghcr.io/paperless-ngx/paperless-ngx:1.14.2"  # application-image-from-github: paperless-ngx/paperless-ngx
  namespace: *namespace
  resources:
    requests:
      cpu: 350m
      memory: 1400Mi
    limits:
      cpu: 2
      memory: 3Gi
  storage:
    data:
      storageClassName: "qnap-nfs"
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
    media:
      storageClassName: "qnap-nfs"
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
    consume:
      storageClassName: "manual"
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
  ingress:
    domain: "papers.krupa.net.pl"
    className: nginx
    annotations: 
      cert-manager.io/cluster-issuer: 'letsencrypt-prod'
      reloader.homer/group: Ankh Cloud
      reloader.homer/name: Paperless
      reloader.homer/subtitle: "Document management system"
      reloader.homer/logo: "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/paperless-ngx-logo.png"
      nginx.ingress.kubernetes.io/proxy-body-size: 10m
      nginx.ingress.kubernetes.io/limit-rpm: '100'
      nginx.ingress.kubernetes.io/limit-rps: '10'
      nginx.ingress.kubernetes.io/limit-req-status-code: '429'
    labels:
      reloader.homer/enabled: "true"
  timezone: "Europe/Berlin"
  database:
    name: &dbname paperless
    userRef: PAPERLESS_DB_USER
    passRef: PAPERLESS_DB_PASS
  secretsRefs:
    user: PAPERLESS_ADMIN_USER
    pass: PAPERLESS_ADMIN_PASS
    email: PAPERLESS_ADMIN_EMAIL
    key: PAPERLESS_SECRET_KEY

  config:
    PAPERLESS_OCR_LANGUAGE: eng+deu+pol
    PAPERLESS_OCR_LANGUAGES: pol  # additional languages
    PAPERLESS_TIKA_ENABLED: '0'
    # PAPERLESS_TIKA_ENABLED=1
    # PAPERLESS_TIKA_ENDPOINT=http://tika.paperless.svc:9998
    # PAPERLESS_TIKA_GOTENBERG_ENDPOINT=http://gotenberg.paperless.svc:3000

postgres:
  name: postgres
  namespace: *namespace
  db:
    name: *dbname
    user: paperless
    userPassRef: PAPERLESS_DB_PASS
    adminPassRef: PAPERLESS_DB_ADMIN_PASS
  externalSecretStoreName: *externalSecretStoreName
  backup:
    schedule: "0 36 22 */2 * *"
    suspend: false
    destinationPath: "s3://postgres/paperless"
    endpointURL:  http://main-minio.minio.svc:9000
    accessKeyRef: 'POSTGRES_S3_ACCESS_KEY'
    secretKeyRef: 'POSTGRES_S3_SECRET_KEY'
  resources:
    requests:
      cpu: 70m
      memory: 70Mi
  storage:
    size: 300Mi
    storageClass: "qnap-nfs"

broker:
  version: "6.0"  # application-version-from-github: redis/redis
  image: "redis:6.0"  # application-version-from-github: redis/redis
  namespace: *namespace
  resources:
    requests:
      cpu: 30m
      memory: 100Mi
    limits:
      cpu: 50m
      memory: 100Mi
  storage:
    name: "broker-data"
    pvcSpec:
      storageClassName: "qnap-nfs"
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 300Mi
