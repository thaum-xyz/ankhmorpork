apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/name: db
    app.kubernetes.io/version: 2.7.0
  name: db
  namespace: paperless
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: database
      app.kubernetes.io/name: db
  serviceName: db
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: db
      labels:
        app.kubernetes.io/component: database
        app.kubernetes.io/name: db
        app.kubernetes.io/version: 2.7.0
    spec:
      containers:
      - env:
        - name: POSTGRES_DB
          value: paperless
        - name: TIMESCALEDB_TELEMETRY
          value: basic
        - name: TS_TUNE_MEMORY
          value: 300MB
        - name: TS_TUNE_NUM_CPUS
          value: "1"
        envFrom:
        - secretRef:
            name: db
        image: timescale/timescaledb:2.7.0-pg14
        imagePullPolicy: IfNotPresent
        name: db
        ports:
        - containerPort: 5432
          name: psql
        resources:
          requests:
            cpu: 70m
            memory: 190Mi
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-data
        - mountPath: /docker-entrypoint-initdb.d/alter-extension.sql
          name: alter-extension
          subPath: alter-extension.sql
      - env:
        - name: DATA_SOURCE_URI
          value: 127.0.0.1?sslmode=disable
        - name: DATA_SOURCE_USER
          value: $(POSTGRES_USER)
        - name: DATA_SOURCE_PASS
          value: $(POSTGRES_PASSWORD)
        - name: PG_EXPORTER_AUTO_DISCOVER_DATABASES
          value: "true"
        envFrom:
        - secretRef:
            name: db
        image: quay.io/prometheuscommunity/postgres-exporter:latest
        name: exporter
        ports:
        - containerPort: 9187
          name: metrics
        securityContext:
          privileged: false
      restartPolicy: Always
      serviceAccountName: db
      volumes:
      - configMap:
          name: additional-sql
        name: alter-extension
  volumeClaimTemplates:
  - metadata:
      name: db-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 300Mi
      storageClassName: qnap-nfs
