apiVersion: v1
data:
  configuration.yaml: "homeassistant:\n  name: Home\n  latitude: !secret home_latitude\n
    \ longitude: !secret home_longitude\n  elevation: !secret home_elevation\n  unit_system:
    metric\n  time_zone: Europe/Berlin\n  customize: !include customize.yaml\n  #auth_providers:\n
    \ #  - type: homeassistant\n  #  - type: trusted_networks\n  #    allow_bypass_login:
    true\n  #    trusted_networks:\n  #      - 192.168.2.0/24\n  external_url: https://home.ankhmorpork.thaum.xyz\n\n#
    Uncomment this if you are using SSL/TLS, running in Docker container, etc.\nhttp:\n
    \ # base_url: https://home.ankhmorpork.thaum.xyz\n  use_x_forwarded_for: true\n
    \ trusted_proxies: !secret trusted_proxies\n\n#panel_iframe:\n#  esphome:\n#    title:
    \"ESPHome\"\n#    url: \"http://192.168.2.94:6052\"\n#    icon: \"mdi:chip\"\n#
    \   require_admin: true\n\n\n# No-config integrations\n#default_config:\n# Redefine
    configuration options from default_config for more control\n# Current list can
    be found in https://www.home-assistant.io/integrations/default_config/\nautomation:
    !include automations.yaml\n#cloud:\nconfig:\ncounter:\ndhcp:\nenergy:\nfrontend:\nhistory:\nimage:\n#input_boolean:
    # configured in lower part of the file\ninput_datetime: # configured in lower
    part of the file\ninput_number:\n#input_select:\ninput_text:\nlogbook:\nmap:\n#media_source:\nmobile_app:\nmy:\nperson:\nscene:
    !include scenes.yaml\nscript: !include scripts.yaml\nssdp:\nstream:\nsun:\nsystem_health:\n#tag:\ntimer:\n#updater:\nwebhook:\n#zeroconf:\nzone:\n#
    END OF default_config\n\nwake_on_lan:\nmedia_extractor:\n\ngroup:\n  people:\n
    \   name: People\n    entities:\n    - person.pawel\n    - person.adrianna\n\nprometheus:\n
    \ namespace: hass\n  filter:\n    exclude_domains:\n    - device_tracker\n    -
    light\n\nlock:\n  - platform: kiwi\n    username: !secret kiwi_username\n    password:
    !secret kiwi_password\n\nalarm_control_panel:\n  - platform: manual\n    name:
    Home Alarm\n    code_arm_required: false\n    arming_time: 60\n    trigger_time:
    600\n    disarmed:\n      trigger_time: 0\n    armed_home:\n      arming_time:
    60\n      delay_time: 30\n\nclimate:\n- platform: generic_thermostat\n  name:
    Fridge\n  heater: light.on_off_plug_1\n  target_sensor: sensor.fridge_temperature\n
    \ ac_mode: true\n  min_temp: 4\n  max_temp: 10\n  target_temp: 6\n  cold_tolerance:
    1\n  hot_tolerance: 1\n\n# Sensors\nsensor:\n  - platform: time_date\n    display_options:\n
    \     - 'time'\n      - 'date'\n  - platform: rest\n    name: mealie\n    scan_interval:
    3600\n    headers:\n      content-type: application/json\n      authorization:
    !secret mealie_token\n    resource: https://recipe.krupa.net.pl/api/meal-plans/today\n
    \   value_template: >\n      {% if value_json is none %}\n        No meal plan\n
    \     {% elif value_json.name %}\n      {{   value_json.name }}\n      {% elif
    value_json.detail %}\n      {{   value_json.detail }}\n      {% else %}\n        unknown\n
    \     {% endif %}\n\ntemplate:\n- sensor:\n  - name: \"ESP Display\"\n    state:
    \"{{ states('switch.espdisplay_backlight') }}\"\n    attributes:\n      # First
    6 characters of each line are considered a static prefix\n      line1: \"LUNCH
    {{ states('sensor.mealie') }}\"\n      line2: >\n        {%\n          set calendars
    = [{\n            \"timestamp\": as_timestamp(state_attr('sun.sun','next_midnight'))
    | int,\n            \"prefix\": \"00:00\",\n            \"data\": \"--- NEXT DAY
    ---\"\n          },{\n            \"timestamp\": as_timestamp(state_attr('calendar.pawel_krupa_net_pl','start_time'))
    | int,\n            \"prefix\": as_timestamp(state_attr('calendar.pawel_krupa_net_pl','start_time'))
    | int | timestamp_custom(\"%H:%M\"),\n            \"data\": state_attr('calendar.pawel_krupa_net_pl','message')
    | regex_replace(find='[^\\x00-\\x7F]+', replace='', ignorecase=False) | trim\n
    \         },{\n            \"timestamp\": as_timestamp(state_attr('calendar.pawel_timescale_com','start_time'))
    | int,\n            \"prefix\": as_timestamp(state_attr('calendar.pawel_timescale_com','start_time'))
    | int | timestamp_custom(\"%H:%M\"),\n            \"data\": state_attr('calendar.pawel_timescale_com','message')
    | regex_replace(find='[^\\x00-\\x7F]+', replace='', ignorecase=False) | trim\n
    \         },{\n            \"timestamp\": as_timestamp(state_attr('calendar.paulfantom','start_time'))
    | int,\n            \"prefix\": as_timestamp(state_attr('calendar.paulfantom','start_time'))
    | int | timestamp_custom(\"%H:%M\"),\n            \"data\": state_attr('calendar.paulfantom','message')
    | regex_replace(find='[^\\x00-\\x7F]+', replace='', ignorecase=False) | trim\n
    \         },{\n            \"timestamp\": as_timestamp(state_attr('calendar.adrianna_wojas_gmail_com','start_time'))
    | int,\n            \"prefix\": as_timestamp(state_attr('calendar.adrianna_wojas_gmail_com','start_time'))
    | int | timestamp_custom(\"%H:%M\"),\n            \"data\": state_attr('calendar.adrianna_wojas_gmail_com','message')
    | regex_replace(find='[^\\x00-\\x7F]+', replace='', ignorecase=False) | trim\n
    \         }] | rejectattr(\"timestamp\", \"gt\", as_timestamp(utcnow()) | int
    + 24*60*60) | sort(attribute='timestamp') \n        %}\n        {{ calendars[0].prefix
    }} {{ calendars[0].data }}\n      line3: >\n        {%\n          set calendars
    = [{\n            \"timestamp\": as_timestamp(state_attr('sun.sun','next_midnight'))
    | int,\n            \"prefix\": \"00:00\",\n            \"data\": \"--- NEXT DAY
    ---\"\n          },{\n            \"timestamp\": as_timestamp(state_attr('calendar.pawel_krupa_net_pl','start_time'))
    | int,\n            \"prefix\": as_timestamp(state_attr('calendar.pawel_krupa_net_pl','start_time'))
    | int | timestamp_custom(\"%H:%M\"),\n            \"data\": state_attr('calendar.pawel_krupa_net_pl','message')
    | regex_replace(find='[^\\x00-\\x7F]+', replace='', ignorecase=False) | trim\n
    \         },{\n            \"timestamp\": as_timestamp(state_attr('calendar.pawel_timescale_com','start_time'))
    | int,\n            \"prefix\": as_timestamp(state_attr('calendar.pawel_timescale_com','start_time'))
    | int | timestamp_custom(\"%H:%M\"),\n            \"data\": state_attr('calendar.pawel_timescale_com','message')
    | regex_replace(find='[^\\x00-\\x7F]+', replace='', ignorecase=False) | trim\n
    \         },{\n            \"timestamp\": as_timestamp(state_attr('calendar.paulfantom','start_time'))
    | int,\n            \"prefix\": as_timestamp(state_attr('calendar.paulfantom','start_time'))
    | int | timestamp_custom(\"%H:%M\"),\n            \"data\": state_attr('calendar.paulfantom','message')
    | regex_replace(find='[^\\x00-\\x7F]+', replace='', ignorecase=False) | trim\n
    \         },{\n            \"timestamp\": as_timestamp(state_attr('calendar.adrianna_wojas_gmail_com','start_time'))
    | int,\n            \"prefix\": as_timestamp(state_attr('calendar.adrianna_wojas_gmail_com','start_time'))
    | int | timestamp_custom(\"%H:%M\"),\n            \"data\": state_attr('calendar.adrianna_wojas_gmail_com','message')
    | regex_replace(find='[^\\x00-\\x7F]+', replace='', ignorecase=False) | trim\n
    \         }] | rejectattr(\"timestamp\", \"gt\", as_timestamp(utcnow()) | int
    + 24*60*60) | sort(attribute='timestamp') \n        %}\n        {% if calendars|length
    > 1 %}\n        {{ calendars[1].prefix }} {{ calendars[1].data }}\n        {%
    endif %}\n      line4: >\n        {%\n          set calendars = [{\n            \"timestamp\":
    as_timestamp(state_attr('calendar.pawel_krupa_net_pl','start_time')) | int,\n
    \           \"prefix\": as_timestamp(state_attr('calendar.pawel_krupa_net_pl','start_time'))
    | int | timestamp_custom(\"%H:%M\"),\n            \"data\": state_attr('calendar.pawel_krupa_net_pl','message')
    | regex_replace(find='[^\\x00-\\x7F]+', replace='', ignorecase=False) | trim\n
    \         },{\n            \"timestamp\": as_timestamp(state_attr('calendar.pawel_timescale_com','start_time'))
    | int,\n            \"prefix\": as_timestamp(state_attr('calendar.pawel_timescale_com','start_time'))
    | int | timestamp_custom(\"%H:%M\"),\n            \"data\": state_attr('calendar.pawel_timescale_com','message')
    | regex_replace(find='[^\\x00-\\x7F]+', replace='', ignorecase=False) | trim\n
    \         },{\n            \"timestamp\": as_timestamp(state_attr('calendar.paulfantom','start_time'))
    | int,\n            \"prefix\": as_timestamp(state_attr('calendar.paulfantom','start_time'))
    | int | timestamp_custom(\"%H:%M\"),\n            \"data\": state_attr('calendar.paulfantom','message')
    | regex_replace(find='[^\\x00-\\x7F]+', replace='', ignorecase=False) | trim\n
    \         },{\n            \"timestamp\": as_timestamp(state_attr('calendar.adrianna_wojas_gmail_com','start_time'))
    | int,\n            \"prefix\": as_timestamp(state_attr('calendar.adrianna_wojas_gmail_com','start_time'))
    | int | timestamp_custom(\"%H:%M\"),\n            \"data\": state_attr('calendar.adrianna_wojas_gmail_com','message')
    | regex_replace(find='[^\\x00-\\x7F]+', replace='', ignorecase=False) | trim\n
    \         }] | rejectattr(\"timestamp\", \"gt\", as_timestamp(utcnow()) | int
    + 24*60*60) | sort(attribute='timestamp') \n        %}\n        {% if calendars|length
    >= 2 %}\n        {{ calendars[2].prefix }} {{ calendars[2].data }}\n        {%
    endif %}\n\ninput_boolean:\n  projector:\n    name: Projector State\n    icon:
    mdi:projector\n  projector_screen:\n    name: Projector Screen State\n    icon:
    mdi:projector-screen-variant-outline\n\ninput_select:\n  speakers:\n    name:
    Speakers Input\n    icon: mdi:speakers\n    options:\n    - opt/coax\n    - line1/2\n
    \   - bt\n    initial: line1/2\n\nplant:\n  jovita:\n    sensors:\n      moisture:
    sensor.jovita_moisture\n      temperature: sensor.jovita_temperature\n      conductivity:
    sensor.jovita_soil_conductivity\n      brightness: sensor.jovita_illuminance\n
    \   min_moisture: 15\n    max_moisture: 60\n    min_conductivity: 350\n    max_conductivity:
    2000\n    min_temperature: 10\n    max_temperature: 32\n    min_brightness: 500\n
    \   max_brightness: 12000\n  svetlana:\n    sensors:\n      moisture: sensor.svetlana_moisture\n
    \     temperature: sensor.svetlana_temperature\n      conductivity: sensor.svetlana_soil_conductivity\n
    \     brightness: sensor.svetlana_illuminance\n    min_moisture: 15\n    max_moisture:
    60\n    min_conductivity: 350\n    max_conductivity: 2000\n    min_temperature:
    10\n    max_temperature: 32\n    min_brightness: 500\n    max_brightness: 12000\n
    \ violet:\n    sensors:\n      moisture: sensor.violet_moisture\n      temperature:
    sensor.violet_temperature\n      conductivity: sensor.violet_soil_conductivity\n
    \     brightness: sensor.violet_illuminance\n    min_moisture: 15\n    max_moisture:
    60\n    min_conductivity: 350\n    max_conductivity: 2000\n    min_temperature:
    10\n    max_temperature: 32\n    min_brightness: 600\n    max_brightness: 20000\n
    \ herbs:\n    sensors:\n      moisture: sensor.herbs_moisture\n      temperature:
    sensor.herbs_temperature\n      conductivity: sensor.herbs_soil_conductivity\n
    \     brightness: sensor.herbs_illuminance\n    min_moisture: 15\n    max_moisture:
    60\n    min_conductivity: 350\n    max_conductivity: 2000\n    min_temperature:
    10\n    max_temperature: 32\n    min_brightness: 3700\n    max_brightness: 60000\n
    \ basil:\n    sensors:\n      moisture: sensor.basil_moisture\n      temperature:
    sensor.basil_temperature\n      conductivity: sensor.basil_soil_conductivity\n
    \     brightness: sensor.basil_illuminance\n    min_moisture: 15\n    max_moisture:
    60\n    min_conductivity: 350\n    max_conductivity: 2000\n    min_temperature:
    8\n    max_temperature: 32\n    min_brightness: 2500\n    max_brightness: 60000\n\nnotify:\n
    \ - platform: slack\n    name: slack\n    api_key: !secret slack_api_key\n    default_channel:
    '#home'\n    username: \"home-assistant\"\n\nswitch:\n  - platform: wake_on_lan\n
    \   name: pawel-pc\n    host: \"192.168.2.51\"\n    mac: !secret pawel_pc_mac\n
    \ - platform: wake_on_lan\n    name: adus-pc\n    host: \"192.168.2.50\"\n    mac:
    !secret adus_pc_mac\n\ngoogle_assistant:\n  project_id: ankhhomeassistant\n  service_account:
    !include google_service_account.json\n  report_state: true\n\ngoogle:\n  client_id:
    !secret google_client_id\n  client_secret: !secret google_client_secret\n  calendar_access:
    \"read_only\"\n\nsonoff:\n  username: !secret sonoff_username\n  password: !secret
    sonoff_password\n  scan_interval: 60 #(optional, lower values than 60 won't work
    anymore!)\n  mode: cloud\n  #grace_period: 600 #(optional)\n  #api_region: 'eu'
    #(optional)\n  #entity_prefix: True #(optional)\n  #debug: False #(optional)\n\nrecorder:\n
    \ db_url: !secret postgresql_uri\n"
  customize.yaml: |
    switch.adus_pc:
      icon: 'mdi:desktop-classic'
    switch.pawel_pc:
      icon: 'mdi:desktop-classic'
    sensor.mealie:
      icon: 'mdi:food'
  scripts.yaml: "projector_toggle:\n  sequence:\n  - service: remote.send_command\n
    \   data:\n      entity_id: remote.broadlink\n      device: nebula\n      command:
    toggle\n      num_repeats: 2\n  mode: single\n  icon: mdi:projector\nspeakers_line1:\n
    \ sequence:\n  - service: remote.send_command\n    data:\n      entity_id: remote.broadlink\n
    \     device: speakers\n      command: \"opt/coax\"\n  - delay:\n      hours:
    0\n      minutes: 0\n      seconds: 2\n      milliseconds: 0\n  - service: remote.send_command\n
    \   data:\n      entity_id: remote.broadlink\n      device: speakers\n      command:
    \"line1/2\"\n  mode: single\n  icon: mdi:cast-audio \nalarm_picture_notification:\n
    \ alias: Alarm Picture Notification\n  sequence:\n  - service: camera.snapshot\n
    \   data:\n      entity_id: camera.hall_high\n      filename: /config/www/images/{{
    filename }}\n  - delay:\n      hours: 0\n      minutes: 0\n      seconds: 10\n
    \     milliseconds: 0\n  - data_template:\n      data:\n        blocks:\n        -
    accessory:\n            style: danger\n            text:\n              text:
    Go to HomeAssistant\n              type: plain_text\n            type: button\n
    \           url: https://home.ankhmorpork.thaum.xyz\n          text:\n            text:
    Alarm has been triggered at {{ states('sensor.time') }}\n            type: mrkdwn\n
    \         type: section\n        - alt_text: Camera picture\n          image_url:
    https://home.ankhmorpork.thaum.xyz/local/images/{{ filename }}\n          title:\n
    \           text: Camera picture\n            type: plain_text\n          type:
    image\n      message: ALARM! @paulfantom\n      title: Last picture\n    service:
    notify.slack\n  - service: notify.notify\n    data:\n      message: Someone entered
    apartment while alarm is armed.\n      title: Home alarm triggered!\n      data:\n
    \       clickAction: https://home.ankhmorpork.thaum.xyz/local/images/{{ filename
    }}\n        color: red\n        ledColor: red\n        persistent: true\n        tag:
    persistent\n  variables:\n    filename: hall_{{ now().strftime('%Y-%m-%d_%H:%M')
    }}.jpg\n  mode: single\n  icon: mdi:camera\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: homeassistant
    app.kubernetes.io/part-of: homeassistant
    app.kubernetes.io/version: 2022.4.6
  name: homeassistant-configs
  namespace: homeassistant
