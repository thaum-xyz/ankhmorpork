apiVersion: v1
data:
  alertmanager.yaml: |
    {{/*
    # NOTE: This file is first processed by the Go template engine in external-secrets-operator
    # as such all the {{ SOME_TEMPLTE }} references that need to be passed to alertmanager need to be first escaped
    # with {{ `{{ SOME_TEMPLTE }}` }}
    */}}

    global:
      resolve_timeout: 5m
      slack_api_url: {{ .slack_api_url }}  {{/* This is a reference to a secret stored in doppler */}}
      opsgenie_api_url: 'https://api.eu.opsgenie.com'
      opsgenie_api_key: {{ .opsgenie_api_key }}  {{/* This is a reference to a secret stored in doppler */}}
    receivers:
    - name: 'slack'
      slack_configs:
      - channel: '#alerts'
        send_resolved: true
        title: |
          {{ `{{- if eq .Status "firing" -}}` }}
            Firing {{ `{{ .Alerts.Firing | len }}` }}
          {{ `{{- else -}}` }}
            Resolved {{ `{{ .Alerts.Resolved | len }}` }}
          {{ `{{- end }}` }} - {{ `{{ .CommonAnnotations.summary }}` }}
        text: >-
          {{ `{{- if .CommonAnnotations.message }}` }}
            {{ `{{ .CommonAnnotations.message }}` }}
          {{ `{{- end }}` }}
          {{ `{{- if .CommonAnnotations.description }}` }}
            {{ `{{ .CommonAnnotations.description }}` }}
          {{ `{{- end }}` }}
        short_fields: true
        fields:
        - title: Alertname
          value: '{{ `{{ .CommonLabels.alertname }}` }}'
        - title: Severity
          value: '{{ `{{ .CommonLabels.severity }}` }}'
        - title: Job
          value: '{{ `{{ .GroupLabels.job }}` }}'
        actions:
        - type: button
          text: 'Runbook :green_book:'
          url: '{{ `{{ .CommonAnnotations.runbook_url }}` }}'
        - type: button
          text: 'Query :mag:'
          url: '{{ `{{ (index .Alerts 0).GeneratorURL }}` }}'
        - type: button
          text: 'Dashboard :grafana:'
          url: '{{ `{{ .CommonAnnotations.dashboard_url }}` }}'
        - type: button
          text: 'Silence :no_bell:'
          url: >-
            {{ `{{ .ExternalURL }}` }}/#/silences/new?filter=%7B
            {{ `{{- range .CommonLabels.SortedPairs -}}` }}
                {{ `{{- if ne .Name "alertname" -}}` }}
                    {{ `{{- .Name }}` }}%3D%22{{ `{{- reReplaceAll " +" "%20" .Value -}}` }}%22%2C%20
                {{ `{{- end -}}` }}
            {{ `{{- end -}}` }}
            alertname%3D%22{{ `{{ reReplaceAll " +" "%20" .CommonLabels.alertname }}` }}%22%7D
    - name: 'opsgenie'
      opsgenie_configs:
        - message: "{{ `{{ .GroupLabels.alertname }}` }} - {{ `{{ .CommonAnnotations.summary }}` }}"
          description: |
            {{ `{{ if gt (len .Alerts.Firing) 0 -}}` }}
            {{ `{{ template "__text_alert_list" .Alerts.Firing }}` }}
            {{ `{{- end }}` }}
            {{ `{{ if gt (len .Alerts.Resolved) 0 -}}` }}
            {{ `{{ template "__text_alert_list" .Alerts.Resolved }}` }}
            {{ `{{- end }}` }}
          details:
            runbookUrl: "{{ `{{ .CommonAnnotations.runbook_url }}` }}"
            dashboardUrl: "{{ `{{ .CommonAnnotations.dashboard_url }}` }}"
            silenceUrl: >-
              {{ `{{ .ExternalURL }}` }}/#/silences/new?filter=%7B
              {{ `{{- range .CommonLabels.SortedPairs -}}` }}
                  {{ `{{- if ne .Name "alertname" -}}` }}
                      {{ `{{- .Name }}` }}%3D%22{{ `{{- reReplaceAll " +" "%20" .Value -}}` }}%22%2C%20
                  {{ `{{- end -}}` }}
              {{ `{{- end -}}` }}
              alertname%3D%22{{ `{{ reReplaceAll " +" "%20" .CommonLabels.alertname }}` }}%22%7D
          priority: >-
            {{ `{{- if ne .CommonLabels.priority "" -}}` }}
              {{ `{{- .CommonLabels.priority }}` }}
            {{ `{{- else -}}` }}
              {{ `{{- if eq .CommonLabels.severity "critical" -}}` }}
              P2
              {{ `{{- else -}}` }}
              P4
              {{ `{{- end -}}` }}
            {{ `{{- end -}}` }}
          responders:
          - name: 'Main'
            type: team
    - name: 'pushover-mac'
      pushover_configs:
      - send_resolved: false
        user_key: {{ .pushover_user_key }}  {{/* This is a reference to a secret stored in doppler */}}
        token: {{ .pushover_token }}  {{/* This is a reference to a secret stored in doppler */}}
        retry: 10m
        device: McAir
        url: '{{ `{{ (index .Alerts 0).GeneratorURL }}` }}'
        priority: '{{ `{{ if eq .Status "firing" }}` }}0{{ `{{ else }}` }}-1{{ `{{ end }}` }}'
        title: |
          {{ `{{- if .CommonAnnotations.summary -}}` }}
            {{ `{{- .CommonAnnotations.summary -}}` }}
          {{ `{{- else -}}` }}
            {{ `{{- .CommonLabels.alertname -}}` }}
          {{ `{{- end }}` }}
        message: >-
          {{ `{{- if .CommonAnnotations.message }}` }}
            {{ `{{ .CommonAnnotations.message }}` }}
          {{ `{{- end }}` }}
          {{ `{{- if .CommonAnnotations.description }}` }}
            {{ `{{ .CommonAnnotations.description }}` }}
          {{ `{{- end }}` }}
    - name: 'healthchecks.io'
      webhook_configs:
        - send_resolved: false
          url: {{ .healthchecks_url }}  {{/* This is a reference to a secret stored in doppler */}}
    - name: 'github'
      webhook_configs:
        - send_resolved: true
          url: "http://github-receiver.monitoring.svc:8080/v1/webhook?owner=thaum-xyz&repo=ankhmorpork"
    - name: "null"
    route:
      group_by: ['alertname', 'namespace', 'job']
      #group_by: ['alertname', 'instance', 'job']
      #group_by: ['instance', 'job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack'
      routes:
        - matchers:
          - "alertname = Watchdog"
          receiver: 'healthchecks.io'
          repeat_interval: 2m
          group_interval: 2m
        - matchers:
          - "alertname = InfoInhibitor"
          receiver: "null"
        - matchers:
          - "severity = critical"
          receiver: 'opsgenie'
          continue: true
        - matchers:
          - "severity = warning"
          receiver: 'pushover-mac'
          continue: true
        - matchers:
          - "severity = warning"
          receiver: 'github'
          continue: true
    inhibit_rules:
      - source_matchers:
        - "severity = critical"
        target_matchers:
        - "severity =~ warning|info"
        equal: ['namespace', 'alertname']
      - source_matchers:
        - "severity = warning"
        target_matchers:
        - "severity = info"
        equal: ['namespace', 'alertname']
      - source_matchers:
        - "alertname = ProbeFailed"
        target_matchers:
        - "alertname = StatusCode"
        equal: ['job', 'instance']
      - source_matchers:
        - "alertname = NodeDown"
        target_matchers:
        - "alertname = TargetDown"
        equal: ['job', 'instance']
      - source_matchers:
        - "alertname = TargetDown"
        - "job = lancre"
        target_matchers:
        - "environment = lancre.thaum.xyz"
      - source_matchers:
        - "alertname = KubeNodeUnreachable"
        target_matchers:
        - "alertname = TargetDown"
        - "job =~ kubelet|node-exporter"
      - source_matchers:
        - "alertname = KubeNodeUnreachable"
        target_matchers:
        - "alertname = KubeNodeNotReady"
      - source_matchers:
        - "alertname = InfoInhibitor"
        target_matchers:
        - "severity = info"
        equal: ['namespace']
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: alert-router
    app.kubernetes.io/instance: main
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/part-of: kube-prometheus
    app.kubernetes.io/version: 0.27.0
  name: alertmanager-config-template
  namespace: monitoring
