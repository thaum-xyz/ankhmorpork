---
domain: "parca.ankhmorpork.thaum.xyz"
namespace: &namespace "parca"
agent:
  version: "0.9.1"  # application-version-from-github: parca-dev/parca-agent
  image: "ghcr.io/parca-dev/parca-agent:v0.9.1"  # application-image-from-github: parca-dev/parca-agent
  namespace: *namespace
  stores: ['parca.parca.svc:7070']
  podMonitor: true
  insecure: true
  insecureSkipVerify: true
  resources:
    requests:
      cpu: "150m"
      # memory: ""
parca:
  version: "0.12.1"  # application-version-from-github: parca-dev/parca
  image: "ghcr.io/parca-dev/parca:v0.12.1"  # application-image-from-github: parca-dev/parca
  namespace: *namespace
  replicas: 0
  serviceMonitor: true
  logLevel: "debug"
  resources:
    requests:
      cpu: 1000m
      memory: 2Gi
    limits:
      cpu: 2000m
      memory: 10Gi
  config:
    debug_info:
      bucket:
        type: 'FILESYSTEM'
        config:
          directory: './tmp'
      cache:
        type: 'FILESYSTEM'
        config:
          directory: './tmp'
    scrape_configs:
    - job_name: 'kubernetes-pods'
      scrape_interval: 1m
      scrape_timeout: 10s
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_parca_dev_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_parca_dev_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_parca_dev_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
