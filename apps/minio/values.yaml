# Config reference: https://github.com/minio/minio/tree/master/helm/minio

image:
  tag: RELEASE.2023-06-02T23-17-26Z

## .data.rootUser and .data.rootPassword are mandatory,
existingSecret: root-credentials

drivesPerNode: 1
replicas: 4

persistence:
  enabled: true
  storageClass: lvm-secondary
  accessMode: ReadWriteOnce
  size: 250Gi

ingress:
  enabled: false

consoleIngress:
  enabled: true
  ingressClassName: traefik
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  path: /
  hosts:
    - minio.ankhmorpork.thaum.xyz
  tls:
    - secretName: minio-ankhmorpork-tls
      hosts:
        - minio.ankhmorpork.thaum.xyz

resources:
  requests:
    cpu: 620m
    memory: 560Mi
  limits:
    cpu: 2
    memory: 2Gi

environment:
  MINIO_PROMETHEUS_URL: "http://prometheus-k8s.monitoring.svc:9090"
  MINIO_PROMETHEUS_JOB_ID: "main-minio"

metrics:
  serviceMonitor:
    enabled: true
    includeNode: true
    relabelConfigs:
      metricRelabelings:
      # Drop all metrics that are duplicated when scraped from all nodes
      - sourceLabels: [__name__]
        regex: 'minio_cluster_.*'
        action: drop
    relabelConfigsCluster:
      metricRelabelings:
      # Drop all metrics that should come directly from nodes
      - sourceLabels: [__name__]
        regex: 'minio_audit_.*|minio_inter_node_traffic_.*|minio_notify_current_send_in_progress|minio_s3_requests_.*|minio_software_.*'
        action: drop
      # Replace server label as it unnecesarily differentiates cluster-level metrics
      - sourceLabels: [server, __name__]
        regex: '(.*);(minio_cluster_.*|minio_bucket_.*|minio_s3_.*)'
        separator: ';'
        action: replace
        replacement: 'main'
        targetLabel: server

podDisruptionBudget:
  enabled: true

svcaccts:
  - accessKey: thanos
    existingSecret: thanos-sa-credentials
    existingSecretKey: secretKey
    user: minio
    policy:
      statements:
        - resources:
          - "arn:aws:s3:::*"
          actions:
          - "s3:GetBucketLocation"
          - "s3:ListAllMyBuckets"
        - resources:
            - 'arn:aws:s3:::metrics'
            - 'arn:aws:s3:::metrics/*'
          actions:
            - "s3:*"
  - accessKey: k3s-db
    existingSecret: k3s-db-sa-credentials
    existingSecretKey: secretKey
    user: minio
    policy:
      statements:
        - resources:
          - "arn:aws:s3:::*"
          actions:
          - "s3:GetBucketLocation"
          - "s3:ListAllMyBuckets"
        - resources:
          - 'arn:aws:s3:::k3s-db'
          - 'arn:aws:s3:::k3s-db/*'
          actions:
          - "s3:*"
  - accessKey: postgres
    existingSecret: postgres-sa-credentials
    existingSecretKey: secretKey
    user: minio
    policy:
      statements:
        - resources:
          - "arn:aws:s3:::*"
          actions:
          - "s3:GetBucketLocation"
          - "s3:ListAllMyBuckets"
        - resources:
          - 'arn:aws:s3:::postgres'
          - 'arn:aws:s3:::postgres/*'
          actions:
          - "s3:*"

buckets:
  - name: metrics
    purge: false
    versioning: true
    policy: none
    
  - name: k3s-db
    purge: false
    versioning: true
    policy: none

  - name: postgres
    purge: false
    versioning: true
    policy: none
