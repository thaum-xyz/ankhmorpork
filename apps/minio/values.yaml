# Config reference: https://github.com/minio/minio/tree/master/helm/minio

## .data.rootUser and .data.rootPassword are mandatory,
existingSecret: root-credentials

drivesPerNode: 1
replicas: 4

persistence:
  enabled: true
  storageClass: lvm-secondary
  accessMode: ReadWriteOnce
  size: 120Gi

ingress:
  enabled: false

consoleIngress:
  enabled: true
  ingressClassName: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  path: /
  hosts:
    - minio.ankhmorpork.thaum.xyz
  tls:
    - secretName: minio-ankhmorpork-tls
      hosts:
        - minio.ankhmorpork.thaum.xyz

resources:
  requests:
    memory: 2Gi

environment:
  MINIO_PROMETHEUS_URL: "http://prometheus-k8s.monitoring.svc:9090"
  MINIO_PROMETHEUS_JOB_ID: "main-minio"

metrics:
  serviceMonitor:
    enabled: true
    includeNode: true
    relabelConfigs:
      metricRelabelings:
      # Drop all metrics that are duplicated when scraped from all nodes
      - sourceLabels: [__name__]
        regex: 'minio_cluster_.*'
        action: drop
    relabelConfigsCluster:
      metricRelabelings:
      # Drop all metrics that should come directly from nodes
      - sourceLabels: [__name__]
        regex: 'minio_audit_.*|minio_inter_node_traffic_.*|minio_notify_current_send_in_progress|minio_s3_requests_.*|minio_software_.*'
        action: drop
      # Replace server label as it unnecesarily differentiates metrics
      - sourceLabels: [server]
        action: replace
        replacement: 'main'
        targetLabel: server

podDisruptionBudget:
  enabled: true

svcaccts:
  - accessKey: thanos
    existingSecret: thanos-sa-credentials
    existingSecretKey: secretKey
    user: minio
  - accessKey: k3s-db
    existingSecret: k3s-db-sa-credentials
    existingSecretKey: secretKey
    user: minio

buckets:
  - name: metrics
    purge: false
    policy: none
    
  - name: k3s-db
    purge: false
    policy: none
    #  statements:
    #    - resources:
    #        - 'arn:aws:s3:::k3s-db/*'
    #      actions:
    #        - "s3:*"
