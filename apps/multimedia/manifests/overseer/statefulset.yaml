apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: overseer
    app.kubernetes.io/part-of: overseer
    app.kubernetes.io/version: 1.29.1
  name: overseer
  namespace: multimedia
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: overseer
      app.kubernetes.io/part-of: overseer
  serviceName: overseer
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/name: overseer
        app.kubernetes.io/part-of: overseer
        app.kubernetes.io/version: 1.29.1
    spec:
      containers:
      - env:
        - name: TZ
          value: Europe/Berlin
        - name: LOG_LEVEL
          value: debug
        image: ghcr.io/sct/overseerr:1.29.1
        imagePullPolicy: IfNotPresent
        name: overseer
        ports:
        - containerPort: 5055
          name: http
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /api/v1/status
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 10
        resources:
          requests:
            cpu: 50m
            memory: 250Mi
        volumeMounts:
        - mountPath: /app/config
          name: appdata
        - mountPath: /app/config/logs
          name: logs
      restartPolicy: Always
      serviceAccountName: overseer
      volumes:
      - emptyDir: {}
        name: logs
  volumeClaimTemplates:
  - metadata:
      name: appdata
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 600Mi
      storageClassName: local-path
