apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: radarr
    app.kubernetes.io/part-of: radarr
    app.kubernetes.io/version: 5.1.3.8246-ls195
  name: radarr
  namespace: multimedia
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/name: radarr
      app.kubernetes.io/part-of: radarr
  serviceName: radarr
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: radarr
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/name: radarr
        app.kubernetes.io/part-of: radarr
        app.kubernetes.io/version: 5.1.3.8246-ls195
    spec:
      containers:
        - env:
            - name: TZ
              value: Europe/Berlin
            - name: PUID
              value: "1000"
            - name: GUID
              value: "1000"
          image: lscr.io/linuxserver/radarr:5.1.3.8246-ls195
          imagePullPolicy: IfNotPresent
          name: radarr
          ports:
            - containerPort: 7878
              name: http
          readinessProbe:
            failureThreshold: 5
            initialDelaySeconds: 2
            tcpSocket:
              port: http
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 35m
              memory: 215Mi
          startupProbe:
            failureThreshold: 60
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: http
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /backup
              name: backup
            - mountPath: /multimedia
              name: multimedia
            - mountPath: /download/completed
              name: downloads
        - args:
            - radarr
          env:
            - name: CONFIG
              value: /app/config.xml
            - name: URL
              value: http://localhost
            - name: PORT
              value: "9708"
          image: ghcr.io/onedr0p/exportarr:v1.6.0
          name: exportarr
          ports:
            - containerPort: 9708
              name: metrics
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: metrics
            periodSeconds: 10
          resources:
            limits:
              cpu: 50m
              memory: 100Mi
            requests:
              cpu: 1m
              memory: 11Mi
          volumeMounts:
            - mountPath: /app
              name: config
              readOnly: true
      restartPolicy: Always
      serviceAccountName: radarr
      volumes:
        - name: multimedia
          persistentVolumeClaim:
            claimName: movies
        - name: downloads
          persistentVolumeClaim:
            claimName: downloaded
        - name: backup
          persistentVolumeClaim:
            claimName: radarr-config-backup
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 4Gi
        storageClassName: longhorn
