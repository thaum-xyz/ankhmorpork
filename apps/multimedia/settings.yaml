---
common:
  loadBalancerIP: "192.168.2.95"
  namespace: &namespace "multimedia"
  externalSecretStoreName: &externalSecretStoreName "doppler-auth-api"

prowlarr:
  name: prowlarr
  version: "1.16.2.4435-ls67"  # application-version-from-github: linuxserver/docker-prowlarr
  image: "linuxserver/prowlarr:1.16.2.4435-ls67"  # application-image-from-github: linuxserver/docker-prowlarr
  namespace: *namespace
  port: 9696
  domain: "prowlarr.ankhmorpork.thaum.xyz"
  exporter:
    port: 9709
  resources:
    requests:
      cpu: 160m
      memory: 37Mi
    #limits:
    #  cpu: 250m
    #  memory: 250Mi
  storage:
    config:
      pvcSpec:
        storageClassName: longhorn
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
  postgres:
    name: postgres-prowlarr
    namespace: *namespace
    instances: 2
    db:
      name: prowlarr
      user: prowlarr
      userPassRef: PROWLARR_DB_PASS
      adminPassRef: PROWLARR_DB_ADMIN_PASS
    externalSecretStoreName: *externalSecretStoreName
    backup:
      schedule: "0 7 3 * * *"
      retentionPolicy: 7d
      suspend: false
      destinationPath: "s3://postgres/multimedia/prowlarr"
      endpointURL:  http://main-minio.minio.svc:9000
      accessKeyRef: 'POSTGRES_S3_ACCESS_KEY'
      secretKeyRef: 'POSTGRES_S3_SECRET_KEY'
    resources:
      requests:
        cpu: 130m
        memory: 300Mi
    #  limits:
    #    cpu: 400m
    #    memory: 420Mi
    storage:
      size: 7Gi
      storageClass: lvm-thin

radarr:
  name: radarr
  version: "5.4.6.8723-ls216"  # application-version-from-github: linuxserver/docker-radarr
  image: "lscr.io/linuxserver/radarr:5.4.6.8723-ls216"  # application-image-from-github: linuxserver/docker-radarr
  namespace: *namespace
  port: 7878
  domain: "radarr.ankhmorpork.thaum.xyz"
  multimediaPVCName: "movies"
  downloadsPVCName: "downloads"
  resources:
    requests:
      cpu: 180m
      memory: 250Mi
    limits:
      cpu: 400m
      memory: 600Mi
  storage:
    config:
      pvcSpec:
        storageClassName: longhorn
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
  postgres:
    name: postgres-radarr
    namespace: *namespace
    instances: 2
    db:
      name: radarr
      user: radarr
      userPassRef: RADARR_DB_PASS
      adminPassRef: RADARR_DB_ADMIN_PASS
    externalSecretStoreName: *externalSecretStoreName
    backup:
      schedule: "0 17 3 * * *"
      retentionPolicy: 14d
      suspend: false
      destinationPath: "s3://postgres/multimedia/radarr"
      endpointURL:  http://main-minio.minio.svc:9000
      accessKeyRef: 'POSTGRES_S3_ACCESS_KEY'
      secretKeyRef: 'POSTGRES_S3_SECRET_KEY'
    resources:
      requests:
        cpu: 130m
        memory: 300Mi
    #  limits:
    #    cpu: 400m
    #    memory: 420Mi
    storage:
      size: 6Gi
      storageClass: lvm-thin

sonarr:
  name: sonarr
  version: "4.0.4.1491-ls237"  # application-version-from-github: linuxserver/docker-sonarr
  image: "lscr.io/linuxserver/sonarr:4.0.4.1491-ls237"  # application-image-from-github: linuxserver/docker-sonarr
  namespace: *namespace
  port: 8989
  domain: "sonarr.ankhmorpork.thaum.xyz"
  multimediaPVCName: "tv"
  downloadsPVCName: "downloads"
  exporter:
    port: 9707
  resources:
    requests:
      cpu: 200m
      memory: 300Mi
    limits:
      cpu: 750m
      memory: 700Mi
  storage:
    config:
      pvcSpec:
        storageClassName: longhorn
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  postgres:
    name: postgres-sonarr
    namespace: *namespace
    instances: 2
    db:
      name: sonarr
      user: sonarr
      userPassRef: SONARR_DB_PASS
      adminPassRef: SONARR_DB_ADMIN_PASS
    externalSecretStoreName: *externalSecretStoreName
    backup:
      schedule: "0 27 3 * * *"
      retentionPolicy: 7d
      suspend: false
      destinationPath: "s3://postgres/multimedia/sonarr"
      endpointURL:  http://main-minio.minio.svc:9000
      accessKeyRef: 'POSTGRES_S3_ACCESS_KEY'
      secretKeyRef: 'POSTGRES_S3_SECRET_KEY'
    resources:
      requests:
        cpu: 130m
        memory: 300Mi
    #  limits:
    #    cpu: 400m
    #    memory: 420Mi
    storage:
      size: 8Gi
      storageClass: lvm-thin

bazarr:
  name: bazarr
  version: "v1.4.2-ls244"  # application-version-from-github: linuxserver/docker-bazarr
  image: "linuxserver/bazarr:v1.4.2-ls244"  # application-image-from-github: linuxserver/docker-bazarr
  namespace: *namespace
  multimediaPVCName: "movies"
  port: 6767
  resources:
    requests:
      cpu: 160m
      memory: 37Mi
  storage:
    config:
      pvcSpec:
        storageClassName: longhorn
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
  postgres:
    name: postgres-bazarr
    namespace: *namespace
    instances: 2
    db:
      name: bazarr
      user: bazarr
      userPassRef: BAZARR_DB_PASS
      adminPassRef: BAZARR_DB_ADMIN_PASS
    externalSecretStoreName: *externalSecretStoreName
    resources:
      requests:
        cpu: 130m
        memory: 300Mi
    storage:
      size: 1Gi
      storageClass: lvm-thin

readarr:
  name: readarr
  version: "develop-0.3.26.2526-ls107"  # application-version-from-github: linuxserver/docker-readarr
  image: "lscr.io/linuxserver/readarr:develop-0.3.26.2526-ls107"  # application-image-from-github: linuxserver/docker-readarr
  namespace: *namespace
  multimediaPVCName: "books"
  downloadsPVCName: "downloads"
  port: 8787
  domain: "readarr.ankhmorpork.thaum.xyz"
  resources:
    requests:
      cpu: 100m
      memory: 130Mi
    limits:
      cpu: 300m
      memory: 350Mi
  storage:
    config:
      pvcSpec:
        storageClassName: longhorn
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
  postgres:
    name: postgres-readarr
    namespace: *namespace
    instances: 2
    db:
      name: readarr
      user: readarr
      userPassRef: READARR_DB_PASS
      adminPassRef: READARR_DB_ADMIN_PASS
    externalSecretStoreName: *externalSecretStoreName
    backup:
      schedule: "0 37 3 * * *"
      retentionPolicy: 7d
      suspend: false
      destinationPath: "s3://postgres/multimedia/readarr"
      endpointURL:  http://main-minio.minio.svc:9000
      accessKeyRef: 'POSTGRES_S3_ACCESS_KEY'
      secretKeyRef: 'POSTGRES_S3_SECRET_KEY'
    resources:
      requests:
        cpu: 130m
        memory: 300Mi
    storage:
      size: 3Gi
      storageClass: lvm-thin
