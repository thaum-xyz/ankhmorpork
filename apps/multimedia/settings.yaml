---
common:
  loadBalancerIP: "192.168.2.95"
  namespace: &namespace "multimedia"

plex:
  name: plex
  version: "1.40.1.8227-c0dd5a73e"
  image: "plexinc/pms-docker:1.40.1.8227-c0dd5a73e"
  namespace: *namespace
  loadBalancerIP: "192.168.2.98"
  port: 32400
  hostname: nas
  exporter:
    config:
      secretName: plex-token
      remoteRef: MULTIMEDIA_PLEX_TOKEN
  resources:
    requests:
      cpu: 1
      memory: 3Gi
    limits:
      cpu: 3
      memory: 8Gi
      # gpu.intel.com/i915: 1
      nvidia.com/gpu: 1
  runtimeClassName: nvidia
  affinity:
    # Preffer to deploy on nodes with Intel GPU 11th gen
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
              - key: gpu.intel.com/device-id.0300-9a49.present
                operator: In
                values:
                  - "true"
          weight: 1
  externalSecretStoreName: doppler-auth-api
  plexClaim:
    secretName: plex-claim
    remoteRef: MULTIMEDIA_PLEX_CLAIM
  moviesPVCName: movies
  tvshowsPVCName: tv
  storage:
    library:
      pvcSpec:
        storageClassName: lvm-secondary
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 45Gi
    backups:
      pvcSpec:
        storageClassName: qnap-nfs
        accessModes:
        #- ReadWriteMany
        - ReadWriteOnce  # FIXME
        resources:
          requests:
            storage: 30Gi

prowlarr:
  name: prowlarr
  version: "1.14.3.4333-ls60"  # application-version-from-github: linuxserver/docker-prowlarr
  image: "linuxserver/prowlarr:1.14.3.4333-ls60"  # application-image-from-github: linuxserver/docker-prowlarr
  namespace: *namespace
  port: 9696
  exporter:
    port: 9709
  resources:
    requests:
      cpu: 160m
      memory: 37Mi
    #limits:
    #  cpu: 250m
    #  memory: 250Mi
  storage:
    config:
      pvcSpec:
        storageClassName: longhorn
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 2Gi
    backups:
      pvcSpec:
        storageClassName: qnap-nfs
        accessModes:
        - ReadWriteMany
        resources:
          requests:
            storage: 300Mi

radarr:
  name: radarr
  version: "5.3.6.8612-ls210"  # application-version-from-github: linuxserver/docker-radarr
  image: "lscr.io/linuxserver/radarr:5.3.6.8612-ls210"  # application-image-from-github: linuxserver/docker-radarr
  namespace: *namespace
  port: 7878
  multimediaPVCName: "movies"
  downloadsPVCName: "downloaded"
  resources:
    requests:
      cpu: 350m
      memory: 350Mi
    limits:
      cpu: 350m
      memory: 600Mi
  storage:
    config:
      pvcSpec:
        storageClassName: longhorn
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    backups:
      pvcSpec:
        storageClassName: qnap-nfs
        accessModes:
        #- ReadWriteMany
        - ReadWriteOnce  # FIXME
        resources:
          requests:
            storage: 300Mi
sonarr:
  name: sonarr
  version: "4.0.2.1183-ls231"  # application-version-from-github: linuxserver/docker-sonarr
  image: "lscr.io/linuxserver/sonarr:4.0.2.1183-ls231"  # application-image-from-github: linuxserver/docker-sonarr
  namespace: *namespace
  port: 8989
  multimediaPVCName: "tv"
  downloadsPVCName: "downloaded"
  exporter:
    port: 9707
  resources:
    requests:
      cpu: 500m
      memory: 230Mi
    limits:
      cpu: 750m
      memory: 500Mi
  storage:
    config:
      pvcSpec:
        storageClassName: longhorn
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
    backups:
      pvcSpec:
        storageClassName: qnap-nfs
        accessModes:
        #- ReadWriteMany
        - ReadWriteOnce  # FIXME
        resources:
          requests:
            storage: 300Mi
